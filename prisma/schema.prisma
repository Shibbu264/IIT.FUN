generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  email         String?         @unique
  name          String?
  createdAt     DateTime        @default(now())
  image         String?
  points        Int             @default(0)
  wallet        String?         @unique
  id            Int          @id @default(autoincrement())
  InstiId       Boolean?        @default(false)
  discord       Boolean?        @default(false)
  twitter       Boolean?        @default(false)
  SocialAccount SocialAccount[]
  bounties      UserBounty[]
}

model Bounty {
  id          Int          @id @default(autoincrement())
  title       String
  description String
  image       String
  amount      Int
  unit        String
  Link        String
  deadline    String
  users       UserBounty[]
}

model UserBounty {
  id           Int    @id @default(autoincrement())
  userId       Int
  bountyId     Int
  pointsEarned Int
  bounty       Bounty @relation(fields: [bountyId], references: [id])
  user         User   @relation(fields: [userId], references: [id])

  @@unique([userId, bountyId])
}

model SocialAccount {
  id         Int      @id @default(autoincrement())
  provider   String
  providerId String
  username   String?
  profileUrl String?
  userId     Int
  createdAt  DateTime @default(now())
  accessToken String    // Access token for API calls
  refreshToken String? @unique  // Refresh token (if provided)
  expiresAt   DateTime? // Optional: Expiration time for the token
  user       User     @relation(fields: [userId], references: [id])

  @@unique([provider, providerId])
}
